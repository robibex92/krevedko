#!/usr/bin/env node

import fs from "fs/promises";
import path from "path";
import { fileURLToPath } from "url";
import { dirname } from "path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

async function clearReviewImages() {
  try {
    console.log(
      "üóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–∑—ã–≤–æ–≤..."
    );

    const reviewsDir = path.join(process.cwd(), "uploads", "reviews");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    try {
      await fs.access(reviewsDir);
    } catch (error) {
      console.log("üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è reviews –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...");
      await fs.mkdir(reviewsDir, { recursive: true });
      console.log("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Ç");
      return;
    }

    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    const files = await fs.readdir(reviewsDir);

    if (files.length === 0) {
      console.log("üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è reviews –ø—É—Å—Ç–∞");
      return;
    }

    console.log(`üì∏ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    let deletedCount = 0;
    for (const file of files) {
      const filePath = path.join(reviewsDir, file);
      try {
        await fs.unlink(filePath);
        deletedCount++;
        console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω: ${file}`);
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${file}:`, error.message);
      }
    }

    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${deletedCount} –∏–∑ ${files.length}`);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:", error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
clearReviewImages();
